"use strict";var ApplicationConfiguration=function(){var applicationModuleName="Denis Lysenko",applicationModuleVendorDependencies=["ngResource","ui.router","ui.bootstrap","ui.utils","ngFileUpload","ngSanitize"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("admin"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("portfolio"),ApplicationConfiguration.registerModule("sidebar"),ApplicationConfiguration.registerModule("users"),angular.module("admin").config(["$stateProvider",function($stateProvider){$stateProvider.state("admin page",{url:"/admin",templateUrl:"modules/admin/views/admin.html",controller:"MainAdminController"}).state("admin work experience info",{url:"/admin/experience",templateUrl:"modules/admin/views/work.experience.html",controller:"ExperienceController"}).state("admin education info",{url:"/admin/education",templateUrl:"modules/admin/views/education.html",controller:"EducationController"}).state("admin profile page",{url:"/admin/profile",templateUrl:"modules/admin/views/profile.html",controller:"ProfileController"}).state("admin about page",{url:"/admin/about",templateUrl:"modules/admin/views/about.html",controller:"AboutController"}).state("admin portfolio page",{url:"/admin/portfolio",templateUrl:"modules/admin/views/portfolio.html",controller:"PortfController"})}]),angular.module("admin").controller("AboutController",["$scope","AboutService",function($scope,About){About.query({lang:$scope.lang},function(data){data.length?$scope.about=data[0]:$scope.about={}}),$scope.save=function(){$scope.success=$scope.error=null,About.save({lang:$scope.lang},$scope.about,function(data){$scope.success="added",$scope.about=data},function(error){$scope.error=error})},$scope.remove=function(id){$scope.success=$scope.error=null,About.remove({lang:$scope.lang,id:id},function(){$scope.about={},$scope.success="removed"},function(error){$scope.error=error})}}]),angular.module("admin").controller("DatePickerController",["$scope",function($scope){$scope.info={},$scope.info.from=new Date,$scope.info.to=new Date,$scope.clear=function(){$scope.dt=null},$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.format="dd-MM-yyyy"}]),angular.module("admin").controller("EducationController",["$scope","EducationService",function($scope,Education){function getScope(){Education.query({lang:$scope.lang},function(data){data.length?$scope.forms=data:$scope.forms=[{}]})}$scope.addOneMore=function(){$scope.forms.push({})},getScope(),$scope.save=function(form){$scope.success=$scope.error=null;var id=form.form._id||"";Education.save({lang:$scope.lang,id:id},form.form,function(){$scope.success="added"},function(error){$scope.error=error})},$scope.remove=function(id){$scope.success=$scope.error=null,Education.remove({lang:$scope.lang,id:id},function(){var index=$scope.forms.indexOf(id);$scope.forms.splice(index,1),$scope.success="removed"},function(error){$scope.error=error})},$scope.$on("change:lang",getScope)}]),angular.module("admin").controller("MainAdminController",["$location","CheckAuth",function($location,CheckAuth){}]),angular.module("admin").controller("PortfController",["$scope","PortfolioService","Upload",function($scope,Portfolio,Upload){function getScope(){Portfolio.query({lang:$scope.lang},function(data){data.length?$scope.portfolios=data:$scope.portfolios=[{}]})}$scope.portfolios=[{}],$scope.addOneMore=function(){$scope.portfolios.push({})},getScope(),$scope.save=function(form){$scope.success=$scope.error=null;var id=form.portfolio._id||"";Upload.upload({url:"/api/admin/"+$scope.lang+"/portfolio/"+id,method:"POST",file:form.screenshot,fields:form.portfolio}).success(function(data){$scope.success="added"}).error(function(error){$scope.error=error})},$scope.remove=function(id){$scope.success=$scope.error=null,Portfolio.remove({lang:$scope.lang,id:id},function(){var index=$scope.portfolios.indexOf(id);$scope.portfolio=$scope.portfolios.splice(index,1),$scope.success="removed"},function(error){$scope.error=error})},$scope.$on("change:lang",getScope)}]),angular.module("admin").controller("ProfileController",["$scope","ProfileService","Upload",function($scope,Profile,Upload){function getScope(){Profile.query({lang:$scope.lang},function(data){data.length?$scope.profile=data[0]:$scope.profile={}})}getScope(),$scope.$on("change:lang",function(){getScope()}),$scope.save=function(form){$scope.success=$scope.error=null,Upload.upload({url:"/api/admin/"+$scope.lang+"/profile/",method:"POST",file:$scope.photo,fields:form.profile}).success(function(data){$scope.profile=data,$scope.success="added"}).error(function(error){$scope.error=error})},$scope.remove=function(id){$scope.success=$scope.error=null,Profile.remove({lang:$scope.lang,id:id},function(){$scope.profile={},$scope.success="removed"},function(error){$scope.error=error})}}]),angular.module("admin").controller("ExperienceController",["$scope","ExperienceService",function($scope,Experience){function getScope(){Experience.query({lang:$scope.lang},function(data){data.length?$scope.forms=data:$scope.forms=[{}]})}$scope.addOneMore=function(){$scope.forms.push({})},getScope(),$scope.save=function(form){$scope.success=$scope.error=null;var id=form.form._id||"";Experience.save({lang:$scope.lang,id:id},form.form,function(){$scope.success="added"},function(error){$scope.error=error})},$scope.remove=function(id){$scope.success=$scope.error=null,Experience.remove({lang:$scope.lang,id:id},function(){var index=$scope.forms.indexOf(id);$scope.forms.splice(index,1),$scope.success="removed"},function(error){$scope.error=error})},$scope.$on("change:lang",getScope)}]),angular.module("admin").factory("AboutService",["$resource",function($resource){return $resource("/api/admin/:lang/about/:id")}]),angular.module("admin").factory("EducationService",["$resource",function($resource){return $resource("/api/admin/:lang/education/:id")}]),angular.module("admin").factory("PortfolioService",["$resource",function($resource){return $resource("/api/admin/:lang/portfolio/:id")}]),angular.module("admin").factory("ProfileService",["$resource",function($resource){return $resource("/api/admin/:lang/profile/:id")}]),angular.module("admin").factory("ExperienceService",["$resource",function($resource){return $resource("/api/admin/:lang/experience/:id")}]),angular.module("core").run(["$rootScope","CheckAuth",function($rootScope,CheckAuth){$rootScope.lang="en",$rootScope.$on("$stateChangeStart",function(event,stateTo){-1!==stateTo.url.indexOf("admin")&&CheckAuth()})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"}).state("about",{url:"/about",templateUrl:"modules/core/views/about.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$rootScope","Authentication","$http",function($scope,$rootScope,Authentication,$http){function getScope(){$http.get("/api/admin/"+$scope.lang+"/about").success(function(data){$scope.about=data[0]}),$http.get("/api/admin/"+$scope.lang+"/education").success(function(data){$scope.educations=data}),$http.get("/api/admin/"+$scope.lang+"/experience").success(function(data){$scope.works=data})}getScope(),$scope.authentication=Authentication,$rootScope.setLang=function(lang){return $rootScope.lang=lang,$rootScope.$broadcast("change:lang"),!1},$scope.$on("change:lang",getScope)}]),angular.module("core").factory("CheckAuth",["$location","Authentication",function($location,Authentication){return function(){Authentication.user||$location.path("/signin")}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("portfolio").config(["$stateProvider",function($stateProvider){$stateProvider.state("portfolio",{url:"/portfolio",templateUrl:"modules/portfolio/views/portfolio.html"})}]),angular.module("portfolio").controller("PortfolioController",["$scope","$http",function($scope,$http){function getScope(){$http.get("/api/admin/"+$scope.lang+"/portfolio").success(function(data){$scope.portfolio=data,$scope.totalItems=$scope.portfolio.length,$scope.itemsPerPage=1,$scope.currentPage=1,$scope.$watch("currentPage + itemsPerPage",function(){var begin=($scope.currentPage-1)*$scope.itemsPerPage,end=begin+$scope.itemsPerPage;$scope.documents=$scope.portfolio.slice(begin,end)})})}getScope(),$scope.$on("change:lang",getScope)}]),angular.module("sidebar").controller("SidebarController",["$rootScope","$scope","$http",function($rootScope,$scope,$http){function getScope(){$http.get("/api/admin/"+$scope.lang+"/profile").success(function(data){$scope.profile=data[0]})}getScope(),$scope.$on("change:lang",getScope)}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/admin")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);